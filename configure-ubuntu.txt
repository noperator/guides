from ubuntu-24.04-live-server-amd64.iso

general {{{

sudo apt install -y \
    xorg i3 i3blocks \
    tigervnc-standalone-server tigervnc-common \
    alacritty \
    fonts-roboto fonts-symbola fonts-font-awesome \
    ripgrep unzip

}}}

vnc {{{

ssh \
    -fNL 15901:127.0.0.1:5901 \
    -i <KEY> \
    <USER>@<HOST>

only realvnc client on macos will send system keys and bypass mission control shortcuts

}}}

https://www.dropbox.com/install-linux

dropbox {{{

wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
~/.dropbox-dist/dropboxd

mkdir ~/.local/bin
cp -r .dropbox-dist/* ~/.local/bin/

sudo wget -4 -O /usr/local/bin/dropbox https://www.dropbox.com/download?dl=packages/dropbox.py &&
    sudo chmod +x /usr/local/bin/dropbox

}}}

dns {{{

sudo resolvectl dns eno1 8.8.8.8 8.8.4.4

might need to force -4 on wget, curl, etc.

}}}

chrome {{{

wget -4 -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo tee /etc/apt/trusted.gpg.d/google.asc >/dev/null
sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
apt install -y google-chrome-stable

}}}

vmware {{{

wget -4 -O VMware-Workstation-Full-17.5.1-23298084.x86_64.bundle 'https://downloads2.broadcom.com/?file=VMware-Workstation-Full-17.5.1-23298084.x86_64.bundle&oid=29065874&id=nYdnDKPnDAqNrtzLgJqZ5rLGv2sddOGwjQjS7uJvSaj6pqqQsyFn0xF-TUdR0grA&verify=1718806583-ud8oNTsxmODGsp3VmxMinZtoNk366CF5XJeVD2tAqts%3D'

wget -4 -O VMware-Workstation-Full-17.5.2-23775571.x86_64.bundle 'https://downloads2.broadcom.com/?file=VMware-Workstation-Full-17.5.2-23775571.x86_64.bundle&oid=29066062&id=zQsGgsrJVeBWgNOSuWUkphQvjoukWtw7xfIf1k5pkcFAMOM61qZilQ9DDwb1LMJe&verify=1718807084-XRQZru%2BG9DHyItocPamkksa%2BPzaLx2xR8Vk2ui2Ne%2Fo%3D'

# https://bbs.archlinux.org/viewtopic.php?pid=2096998#p2096998

/usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1

# https://github.com/mkubecek/vmware-host-modules/blob/workstation-17.5.1/INSTALL

wget -4 https://github.com/mkubecek/vmware-host-modules/archive/workstation-17.5.1.tar.gz
tar -xzf workstation-17.5.1.tar.gz
cd vmware-host-modules-workstation-17.5.1
make
sudo make install

# https://askubuntu.com/a/1145426

sudo vmware-modconfig --console --install-all
openssl req -new -x509 -newkey rsa:2048 -keyout VMWARE17.priv -outform DER -out VMWARE17.der -nodes -days 36500 -subj "/CN=VMWARE/"
sudo /usr/src/linux-headers-$(uname -r)/scripts/sign-file sha256 ./VMWARE17.priv ./VMWARE17.der $(modinfo -n vmmon)
sudo /usr/src/linux-headers-$(uname -r)/scripts/sign-file sha256 ./VMWARE17.priv ./VMWARE17.der $(modinfo -n vmnet)
strings $(modinfo -n vmmon) | grep 'Module signature appended'
strings $(modinfo -n vmnet) | grep 'Module signature appended'
sudo modprobe vmmon
sudo modprobe vmnet

# guess I didn't need these? did I even need to sign them at all? idk
# sudo mokutil --import VMWARE17.der
# mokutil --test-key VMWARE17.der

Could not connect 'Ethernet0' to virtual network '/dev/vmnet0'. More information can be found in the vmware.log file.
Failed to connect virtual device 'Ethernet0'.

# https://www.reddit.com/r/archlinux/comments/9povuy/vmware_could_not_connect_ethernet0_to_virtual/

sudo vmware-networks --start
Started Bridge networking on vmnet0
Enabled hostonly virtual adapter on vmnet1
Started DHCP service on vmnet1
Started NAT service on vmnet8
Enabled hostonly virtual adapter on vmnet8
Started DHCP service on vmnet8
Started all configured services on all networks

}}}

nvidia {{{

apti nvidia-driver-565-server nvidia-cuda-toolkit

nvidia-smi

}}}

ssh luks unlock {{{

apts dropbear-initramfs

# /etc/dropbear/initramfs/dropbear.conf
DROPBEAR_OPTIONS="-p <RANDOM_PORT> -m -s -j -k -I 180"

sudo cp ~/.ssh/authorized_keys /etc/dropbear/initramfs/

dpkg -l | g dropbear.initramfs
ii  dropbear-initramfs  2022.83-4  all  lightweight SSH2 server and client - initramfs integration

sudo lsinitramfs /boot/initrd.img-$(uname -r) | g dropbear
etc/dropbear
etc/dropbear/dropbear.conf
etc/dropbear/dropbear_ecdsa_host_key
etc/dropbear/dropbear_ed25519_host_key
etc/dropbear/dropbear_rsa_host_key
scripts/init-bottom/dropbear
scripts/init-premount/dropbear
usr/sbin/dropbear

sudo update-initramfs -u
dropbear: WARNING: Invalid authorized_keys file, SSH login to initramfs won't work!

ssh m 'cat /proc/net/arp' | tail -n +2 | awk '{print $1}' | parallel -j 50 'ncat -nvz {} <RANDOM_PORT>' |& grep -i connected
Ncat: Connected to <INITRAMFS_IP>:<RANDOM_PORT>.

ssh -p <RANDOM_PORT> -i <KEY> root@<INITRAMFS_IP>

cryptroot-unlock
cryptsetup: dm_crypt-0 set up successfully
Shared connection to <INITRAMFS_IP> closed.

}}}

remote sudo with yubikey {{{

# https://github.com/jbeverly/pam_ssh_agent_auth/issues/23#issuecomment-1987383618
https://github.com/z4yx/pam_rssh

git clone --recurse-submodule https://github.com/z4yx/pam_rssh.git
cd pam_rssh

apti pkg-config libssl-dev build-essential libpam0g-dev

cargo build --release

# find /lib/x86_64-linux-gnu/security /lib/security /usr/lib/security -name libpam_rssh.so

sudo cp target/release/libpam_rssh.so /lib/x86_64-linux-gnu/security/

# /etc/pam.d/sudo
auth sufficient libpam_rssh.so debug

# /etc/sudoers
Defaults:%sudo env_keep += "SSH_AUTH_SOCK"

}}}

tmp dir {{{

apti libpam-tmpdir

}}}

luks/fmt for second drive {{{

ùÑ¢ lsblk
NAME                        MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINTS
nvme0n1                     259:4    0   1.8T  0 disk

sudo parted /dev/nvme0n1 mklabel gpt

sudo parted /dev/nvme0n1 mkpart primary 0% 100%

ùÑ¢ lsblk /dev/nvme0n1
NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
nvme0n1     259:4    0  1.8T  0 disk
‚îî‚îÄnvme0n1p1 259:6    0  1.8T  0 part

sudo cryptsetup luksFormat /dev/nvme0n1p1
sudo cryptsetup luksUUID /dev/nvme0n1p1
<UUID>

sudoedit /etc/crypttab
dm_crypt-1 UUID=<UUID> none luks

sudo cryptsetup open /dev/nvme0n1p1 dm_crypt-1

ùÑ¢ lsblk
NAME                        MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINTS
nvme0n1                     259:4    0   1.8T  0 disk
‚îî‚îÄnvme0n1p1                 259:6    0   1.8T  0 part
  ‚îî‚îÄdm_crypt-1              252:2    0   1.8T  0 crypt

sudo mkfs.ext4 /dev/mapper/dm_crypt-1

blkid /dev/mapper/dm_crypt-1
/dev/mapper/dm_crypt-1: UUID="<UUID>" BLOCK_SIZE="4096" TYPE="ext4"

sudoedit /etc/fstab
/dev/disk/by-uuid/<UUID> /data ext4 defaults 0 2

sudo mkdir /data
sudo mount /data

sudo chown <USER> /data
sudo chmod 755 /data

mkdir /data/lang-models
sudo chown <USER>:ollama /data/lang-models
sudo chmod 770 /data/lang-models

}}}
